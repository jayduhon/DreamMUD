# TODO
#
# --- Changes to mainline DennisMUD ---
# - Fixed a bug: If your nickname is the same as your user, then looking at username sent you a duplicated description text so I added an if not found_something conditional to the relevant part.
# - I really really wanted to see some basic colors so I added some with a simple list of variables in a module with the mcolor() function (affects room name, say, occupants, exits, messages, announcements). Colors are optional and turned off by default.
# - Added two flags for optional things to make the gameplay more readable: builder (for hiding IDs if not needed) and cecho (for making command echo optional as most clients do it on their own anyway)
# - Slightly formatted the say command with colors and exclamation/ask/say options
# - Added a simple custom pronoun system (subj/obj) and fixed some commands not considering the respective pronouns of the one doing given action
# - Formatted some of the emote/say commands for better looking output also for minimum length to dont emote empty strings
# - Network timeout incorrectly told the reconnecting user that their password is wrong
# - Added ability to hide items so they blend into a room (so you can use or look at things mentioned only by descriptions). They became unhidden/visible upon being taken up. Wizards can see them with an added (Hidden) string after their name.
# - Made a rename target command for wizards (changes target's nickname)
# - Made a randomize exit command to make exits only appear at a 1 out of X chance. First user to a room can reveal them, or make them hide upon a failed check. Wizards can see and use any of them.
# - Made a randomize item command to work the same way as exits do, except that taking an item up sets the chance back to 1. Wizards can see them.
# - Made a language variable for users, and if these don't match their spoken words become encoded for others. Mostly just a flavor thing, not a real language. (Vigenere cypher used for consistent output.) Language can be learned with player made items.
# - Items can be set to be containers with the alter_item command then accessed with the load/unload commands.
# - Added remake item/room/exit commands to reset them.
# - Time finally flows on the mud, it can be configured with CONFIG variables (timegap is the tick difference in seconds)
# - Added an optional spirit system that gets replenished over time. Rate and command costs can be configured (spiritenabled and spiritrate, SCOST in command files), current spirit of an user can be accessed with looking at themselves. (Wizards are not hindered by this system.)
#
# --- my ideas ---
# 
# unload and common.check now works with containers but leads to a double message
# How bothersome would it be if you had to hold items for certain commands? (write and read currently)
# utf8 compatibility + mccp (twisted?)
# some rituals take away the spirit even if failed (should i fix it?)
# languages could be skills, the better trained the more you understand. requires supporting multiple langs on a character 
#
# --- seisatsu ideas ---
# 
# 0. sitting or laying on something should make it impossible to get it or use it (for future, continual usage could be a thing too so lets plan out variables)
# 1. Allow an item to have one description when it is looked at in a room, and another description when it is looked at while being held.
# 2. Consider changing IDs so that they start with a letter to indicate what kind of object they are. You could have a room with ID "r23", an exit "e2", a chest "c5". This would allow for example, the break <etc> commands to just be one "break" command, which can tell what it is breaking by ID. This might simplify command usage, but make the modules themselves more complex.
# 4. If an exit has a paired key, breaking that key item will not unpair it from the exit. The problem is that items don't have a record of the exit they're paired to. This will have to be changed, in order to prevent having to search through all exits in the database when an item is broken. That will also require removing the item's pairing record when an exit is broken.
#    This is not very high priority, because nothing will happen if an exit has a nonexistent key paired to it. We could even have the key get lazily unpaired the next time someone looks at or uses the exit and its key item is found to not exist.
# 7. Add a break user command for wizards which deletes a user account and removes them as owner from everything they owned in the world. Items with no owner will be owned by <world>.
# 8. Also add a purge user command which deletes everything in the world for which they were the only owner.
# 9. There should be a purge inventory command that breaks all items in your inventory that you own.
# 10. For wizards, the purge inventory command will still only delete the items in their inventory that they own. To delete all items respective of owner, they should use greater purge inventory.